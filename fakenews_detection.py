# -*- coding: utf-8 -*-
"""FakeNews Detection

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LUhyt8c_ANvoB8O34pVryC8LBJTO5Y4b
"""

import numpy as np
import pandas as pd

from sklearn.model_selection import train_test_split
from sklearn.svm import LinearSVC
from sklearn.feature_extraction.text import TfidfVectorizer

data = pd.read_csv('fake_or_real_news.csv')

data['fake'] = data['label'].apply(lambda x: 0 if x == 'REAL' else 1)

data = data.drop('label', axis = 1)

X, y = data['text'], data['fake']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2)

len(X_train)

len(X_test)

vectorizer = TfidfVectorizer(stop_words='english', max_df = 0.7)
X_train_vectorized = vectorizer.fit_transform(X_train)
X_test_vectorized = vectorizer.transform(X_test)

classifier = LinearSVC()
classifier.fit(X_test_vectorized, y_test)

classifier.score(X_test_vectorized, y_test)

len(y_test)

X_test.iloc[10]

with open('mytext.txt', 'w', encoding = 'utf-8') as f:
  f.write(X_test.iloc[10])

with open('mytext.txt', 'r', encoding = 'utf-8') as f:
  text = f.read()

vectorized_text = vectorizer.transform([text])

classifier.predict(vectorized_text)

y_test.iloc[10]

